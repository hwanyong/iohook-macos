name: Manual Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  publish:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install system dependencies
      run: |
        # Ensure Xcode Command Line Tools are available
        xcode-select --install 2>/dev/null || true
        xcode-select --print-path
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build native module
      run: npm run rebuild
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Version bump and create tag
      run: |
        npm version ${{ github.event.inputs.version }}
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
    
    - name: Verify package contents
      run: |
        echo "Package contents:"
        npm run publish:check
        echo "Checking native binary:"
        find . -name "*.node" -type f || echo "No .node files found"
        ls -la bin/ || echo "No bin directory"
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Push changes
      run: |
        git push origin main
        git push origin --tags
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: |
          ## Changes in this release
          
          See the [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          npm install iohook-macos@${{ env.NEW_VERSION }}
          ```
          
          ## Features
          - macOS system event hook library for Electron applications
          - TypeScript support with full type definitions
          - High-performance event monitoring
          - Accessibility permission handling
          
        draft: false
        prerelease: false 