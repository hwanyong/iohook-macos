name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-binaries:
    name: Build ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    
    strategy:
      matrix:
        include:
          - os: darwin
            arch: arm64
            runner: macos-latest
          - os: darwin
            arch: x64
            runner: macos-13
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install system dependencies
      run: |
        xcode-select --install 2>/dev/null || true
        xcode-select --print-path
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build prebuilt binary
      run: npm run prebuild
    
    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: prebuilds-${{ matrix.os }}-${{ matrix.arch }}
        path: prebuilds/
        retention-days: 1

  publish:
    needs: build-binaries
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download all binary artifacts
      uses: actions/download-artifact@v4
      with:
        path: prebuilds-temp
    
    - name: Organize prebuilt binaries
      run: |
        mkdir -p prebuilds
        cp -r prebuilds-temp/prebuilds-darwin-arm64/* prebuilds/ || true
        cp -r prebuilds-temp/prebuilds-darwin-x64/* prebuilds/ || true
        echo "Prebuilt binaries:"
        find prebuilds -type f
    
    - name: Run tests
      run: npm test
    
    - name: Verify package contents
      run: |
        echo "Package contents:"
        npm pack --dry-run
        echo "Checking prebuilt binaries:"
        find prebuilds -name "*.node" -type f || echo "No .node files found"
    
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this release
          
          See the [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          npm install iohook-macos@${{ github.ref_name }}
          ```
          
          ## Features
          - macOS system event hook library for Electron applications
          - TypeScript support with full type definitions
          - High-performance event monitoring
          - Accessibility permission handling
          
        draft: false
        prerelease: false 